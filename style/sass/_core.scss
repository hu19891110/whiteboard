/*-  BASE STYLES

This is the "config" file for the framework. It's seldom that you have to touch this
more than once during the building of the site (most site specific stuff should go
into "_main.scss").

Core.scss includes variables, @font-faces rules, and other nifty stuff you
just have to dump somewhere. You control most of the site's core functionality
from here. As you can see, some minor reseting is done below, as well as 
defining a mixin. Do not fear â€“ this is stuff that doesn't go into "_reset.scss"
because you still might want to alter things in here. 

----------------------------------------------------------------------*/

// Font stacks

@font-face {
	font-family: 'Inconsolata';
	src: url('../fonts/Inconsolata.eot');
	src: local('Inconsolata'), url('../fonts/Inconsolata.ttf') format('truetype'), url('../fonts/Inconsolata.svg#webfont') format('svg');
}

$serif: Georgia, "Times New Roman", serif;
$sans: "Helvetica Neue", Helvetica, Arial, sans-serif;
$monospaced: Inconsolata, Monaco, "Courier New", Courier, monospace;

// Colors

$accent: #f00;		// Typically for links
$comp: green;		// Some other cool color
$highlight: blue;	// For callouts, for example


// Local mixins


// Layout

$page_width: 980;		// Sets the main wrapper width to 980px. Change at leisure. Unfortunately, you have to change "$page_width_spec"
						// in library/_utils.scss as well :(

$lineheight: 28px;		// Specifies the global lineheight. Used for a nice vertical rhythm. Remember to 
						// ALWAYS stick this variable when adding margins, paddings, etc., and you'll see
						// the content stick to the vertical grid (press 'B' on your keyboard to view).

/*- Fluid images and objects ----------*/

img, object, embed {
	max-width: 100%;
	height: auto !important;
}





/*- GLOBAL
----------------------------------------------------------------------*/
/*
 This inner element makes centers the page and acts like a wrapper for the fluid elements.
*/
$page_width: ($page_width / 10);

.wrapper{
	max-width: #{$page_width}em;
	width: 90%;
	height: 100%;
	margin: 0 auto;
	@include clearfix;
}


body {	
	-webkit-text-size-adjust: 100%;
	 
	&.grid{
		/* Define path to this tiny .png with the baseline grid. See example in images folder. The Javascript in the
		/js folder will map the 'B' key to show the grid. I encourage you to create your own baseline .png according
		to the baseline grid you're using (this one is 28px). I'm using http://thesquaregrid.com right now. */
		
		background-image: url(../images/grid.png);
		background-repeat: repeat;
	}
	
	&.grid .wrapper{
		/* Define path to the site's columns. */
		background-image: url(../images/baseline.png);
		background-color: rgba(255,255,255, 0.4);
		border-left: 1px solid #999;
		border-right: 1px solid #999;
	}
	
}


/*- LINKS
----------------------------------------------------------------------*/
a{
	position: relative;
	-webkit-font-smoothing: antialiased;
}

a:active, a:focus{
	outline: none;
	top: 1px;
}

a em, a time, a strong, a span{
	cursor: pointer;
}


/* =HEADINGS */
/*-----------------------------------------*/

h1, h2, h3, h4, h5, h6{
	font-weight: normal; 
	margin-bottom: 0; 
	line-height: 1.5; 
	-webkit-font-smoothing: antialiased;
	text-rendering: optimizeLegibility;		/* Fix kerning */
	
	a{
		
	}
}


/*- ELEMENTS
----------------------------------------------------------------------*/

p, ul, ol{
	@include font(1.3em, $lineheight);		/* Set global paragraph font size here
											Remember to set margins in article text! */
}

abbr {
	cursor: help;
	
	&:hover{
		
	}
}

label{
	font-weight: bold;
}

time[title]{
	font-weight: bolder;
}

hr{
	border: 0;
	padding: 0;
	height: 1px;
	background-color: #e2e2e2;
	margin: $lineheight*2 auto ($lineheight*2) - 1px;		/* Make up for the border */ 
}

pre, code{
	font-family: $monospaced;
	line-height: $lineheight;
}
pre code{
	font-size: 1.1em;
	-webkit-font-smoothing: subpixel-antialiased;		/* Code doesn't look that good antialiased */
	
	&[class]:after{ 														
		content: attr(class);							/* In code blocks, add the language to the class attribute and it'll be shown below the block */
		display: block;									 
		text-align: right;
		font-size: smaller;
		padding-top: 5px;
		text-transform: uppercase;
	}
}

del{
	color: #999; 
	border: 0;
}

/* Used for error messages and such. */

.negative{
	color: #b30000;
}
.positive{
	color: green;
}

/**
* 	Button style
* 	Usage: include the mixin and define base color. I highly recommend you to customize these styles.
*/
@mixin button($basecolor: #fff){
		@include border-radius(1em);
		-webkit-font-smoothing: antialiased;
		display: inline-block;
		background-color: #eee;				/* Backup */
		@include gradient($basecolor, darken($basecolor, 10%));
		font-family: $sans;
		font-weight: bold;
		color: $accent;
		text-shadow: #fff 0 1px 1px;
		text-align: center;
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		-ms-box-sizing: border-box;
		box-sizing: border-box;
		@include box-shadow(rgba(255,255,255, 0.4) 0 0 40px);
		border: 1px solid #ddd;
		font-size: 3em;
		text-decoration: none;
		line-height: $lineheight;
		padding: $lineheight 0;
		@include transition(all 0.15s ease-out);
		
	&:hover{
		@include box-shadow(rgba(255,255,255, 0.6) 0 0 50px);
	}
	
	&:active{
		@include transition(none);
		top: auto; outline: none !important;
		color: darken($accent, 20%);
		@include box-shadow(inset rgba(0,0,0, 0.5) 0 3px 5px);
	}
}

.button, button, input[type=submit]{
	@include button;
}